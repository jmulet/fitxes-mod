/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InformesSGD.java
 *
 * Created on 13-jul-2011, 8:56:45
 */

package org.iesapp.modules.fitxes.dialogs;

import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JCheckBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import org.iesapp.clients.sgd7.base.BeanTipoIncidencias;
import org.iesapp.clients.sgd7.base.TipoIncidencias;
import org.iesapp.clients.sgd7.evaluaciones.EvaluacionesCollection;
import org.iesapp.clients.sgd7.reports.InformesSGD;
import org.iesapp.framework.pluggable.grantsystem.GrantBean;
import org.iesapp.framework.pluggable.grantsystem.Profile;
import org.iesapp.framework.table.MyCheckBoxRenderer;
import org.iesapp.modules.fitxes.FitxesGUI;
import org.iesapp.modules.fitxes.reports.ReportingClass;
import org.iesapp.modules.fitxescore.util.Cfg;
import org.iesapp.util.DataCtrl;

/**
 *
 * @author Josep
 */
public class InformesSGDdlg extends javax.swing.JDialog {
    private final DefaultComboBoxModel modelComboBox1;
    private final DefaultComboBoxModel modelComboBox2;
    private DefaultTableModel modelTable1;
    private final ArrayList<Profile> listexpds;
    private final InformesSGD informes;
    private final Cfg cfg;

    /** Creates new form InformesSGD */
    public InformesSGDdlg(java.awt.Frame parent, boolean modal, ArrayList<Profile> nexpds, 
            ArrayList<String> noms, final Cfg cfg) {
        super(parent, modal);
        initComponents();
        this.cfg = cfg;
        
        cfg.getCoreCfg().getMainHelpBroker().enableHelpKey(this.getRootPane(), "org-iesapp-modules-fitxes-informes", null);
     
        
        modelComboBox1 = new DefaultComboBoxModel();
        modelComboBox2 = new DefaultComboBoxModel();
        listexpds = nexpds;

        informes = new InformesSGD(cfg.getCoreCfg().getSgdClient());
        
        if (cfg.getCoreCfg().getSgd()==null || cfg.getCoreCfg().getSgd().isClosed()) {
            JOptionPane.showMessageDialog(null,
                    "No hi ha connexió amb el servidor SGD.\nDisculpau les molèsties.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            jButton1.setEnabled(false);
        } else {


            for (int i = 0; i < noms.size(); i++) {
                modelComboBox1.addElement(noms.get(i));
                modelComboBox2.addElement(noms.get(i));
            }

            jComboBox2.setModel(modelComboBox1);
            jComboBox3.setModel(modelComboBox2);

            jComboBox3.setSelectedIndex(modelComboBox2.getSize() - 1);
            //Query SGD for inici curs
          
            jDateChooser1.setDate( EvaluacionesCollection.getInicioCurso(cfg.getCoreCfg().getSgdClient()) );
            jDateChooser2.setDate( cfg.getCoreCfg().getMysql().getServerDate());
            
            TipoIncidencias tipoIncidencias = cfg.getCoreCfg().getSgdClient().getTipoIncidencias();
            HashMap<Integer, BeanTipoIncidencias> mapIncidencias = tipoIncidencias.getMapIncidencias();
            
            for (int id : mapIncidencias.keySet()) {
                BeanTipoIncidencias bti = mapIncidencias.get(id);
                String simbol = bti.getSimbolo();
                boolean inc;
                if (simbol.equals("AG") || simbol.equals("AL")|| simbol.equals("AM") || simbol.equals("ALH")) {
                    inc = true;
                } else {
                    inc = false;
                }
                modelTable1.addRow(new Object[]{id, inc, bti.getDescripcion(), simbol});
            }

        }

     

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex==1)
                return true;
                else
                return false;
            }
        }
        ;
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Informes SGD");

        jLabel1.setText("Tipus d'informe");
        jLabel1.setName("jLabel1"); // NOI18N

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Llistat de les incidències del grup", "Resum de les incidències del grup" }));
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Data  des de");
        jLabel2.setName("jLabel2"); // NOI18N

        jDateChooser1.setName("jDateChooser1"); // NOI18N

        jLabel3.setText("Fins");
        jLabel3.setName("jLabel3"); // NOI18N

        jDateChooser2.setName("jDateChooser2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        modelTable1 = new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Id", "Seleccionat", "Incidència", "Simbol"
            }
        );
        jTable1.setModel(modelTable1);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(1).setCellRenderer(new MyCheckBoxRenderer());

        JCheckBox checkbox = new JCheckBox("");
        checkbox.setHorizontalAlignment(SwingConstants.CENTER);
        jTable1.getColumnModel().getColumn(1).setCellEditor(new DefaultCellEditor( checkbox ));

        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setRowHeight(32);
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jLabel4.setText("Mostrar incidències");
        jLabel4.setName("jLabel4"); // NOI18N

        jButton1.setText("Genera");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("Convivència");
        jCheckBox1.setName("jCheckBox1"); // NOI18N
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Assistència");
        jCheckBox2.setName("jCheckBox2"); // NOI18N
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Puntualitat");
        jCheckBox3.setName("jCheckBox3"); // NOI18N
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel·la");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Alumne des de");
        jLabel5.setName("jLabel5"); // NOI18N

        jComboBox2.setName("jComboBox2"); // NOI18N

        jLabel6.setText("Fins");
        jLabel6.setName("jLabel6"); // NOI18N

        jComboBox3.setName("jComboBox3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, 0, 521, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox2, 0, 202, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                    .addComponent(jComboBox3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(17, 17, 17)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox3)
                        .addGap(141, 141, 141)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed


        int sel = jComboBox1.getSelectedIndex();
        if(sel==0)
        {
            doLlistatInforme();
        }
        else
        {
            doResumInforme();
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public void doLlistatInforme()
    {
        //crea una llista dels alumnes que realment s'han de generar informe

        int index1 = jComboBox2.getSelectedIndex();
        int index2 = jComboBox3.getSelectedIndex();

        if(index2<index1)
        {
            int aux=index1;
            index1 = index2;
            index2 = aux;
        }

       ArrayList<Integer> filteredListExpd = new ArrayList<Integer>();

      GrantBean gb = FitxesGUI.moduleGrant.get("informeSGD_gen");
      for(int i=index1; i<=index2; i++)
      {
          //comprova si l'alumne pertany a l'usuari, sino no pot obtenir info
          int exp2 = listexpds.get(i).getNexp();
          if(FitxesGUI.moduleGrant.isGranted(gb, listexpds.get(i)))
          {
              filteredListExpd.add(exp2);
          }
      }



        //condicio sobre tipus d'incidencia
        ArrayList<String> filteredListInc = new ArrayList<String>();

        for(int i=0; i<jTable1.getRowCount(); i++)
        {
            boolean sel = (Boolean) jTable1.getValueAt(i, 1);
            String abrev = (String) jTable1.getValueAt(i, 3);
            if(sel)
            {
                filteredListInc.add(abrev);
            }
        }

        if(filteredListExpd.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No hi ha cap alumne de la seva tutoria\nper mostrar informació.");
            return;
        }


        if(filteredListInc.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No heu triat cap incidència per mostrar.");
        }
        else
        {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            //genera la llista
            List listbean = informes.getListIncidencies(filteredListExpd, filteredListInc,
                    jDateChooser1.getDate(), jDateChooser2.getDate(), -1);

            HashMap map = new HashMap();
            map.put("datainici", new DataCtrl(jDateChooser1.getDate()).getDiaMesComplet());
            map.put("datafinal", new DataCtrl(jDateChooser2.getDate()).getDiaMesComplet());

            //genera el report
            ReportingClass rc = new ReportingClass(cfg);
            rc.sgdReport1(listbean, map);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }

    }

     public void doResumInforme()
     {

    //crea una llista dels alumnes que realment s'han de generar informe

        int index1 = jComboBox2.getSelectedIndex();
        int index2 = jComboBox3.getSelectedIndex();

        if(index2<index1)
        {
            int aux=index1;
            index1 = index2;
            index2 = aux;
        }

        
        
      ArrayList<Integer> filteredListExpd = new ArrayList<Integer>();

      GrantBean gb = FitxesGUI.moduleGrant.get("informeSGD_gen");
      for(int i=index1; i<=index2; i++)
      {
          //comprova si l'alumne pertany a l'usuari, sino no pot obtenir info
          int exp2 = listexpds.get(i).getNexp();
          if(FitxesGUI.moduleGrant.isGranted(gb, listexpds.get(i)))
          {
              filteredListExpd.add(exp2);
          }
      }



        if(filteredListExpd.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "No hi ha cap alumne de la seva tutoria\nper mostrar informació.");
            return;
        }

            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            //genera la llista
            List listbean = informes.getResumIncidencies(filteredListExpd, jDateChooser1.getDate(), jDateChooser2.getDate());

         //   //System.out.println("size of bean"+listbean.size());


            HashMap map = new HashMap();
            map.put("datainici", new DataCtrl(jDateChooser1.getDate()).getDiaMesComplet());
            map.put("datafinal", new DataCtrl(jDateChooser2.getDate()).getDiaMesComplet());

            //genera el report
            ReportingClass rc = new ReportingClass(cfg);
            rc.sgdReport2(listbean, map);
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

     }

    //Tick convivència
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        ArrayList<String> llista = new ArrayList<String>();
        llista.add("AG");
        llista.add("AL");
        llista.add("AM");
        llista.add("ALH");
        marcaTaula(jCheckBox1.isSelected(), llista);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    //Tick Assistència
    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        ArrayList<String> llista = new ArrayList<String>();
        llista.add("F");
        llista.add("FA");
        llista.add("FJ");
        marcaTaula(jCheckBox2.isSelected(), llista);
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    //Tick Puntualitat
    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        ArrayList<String> llista = new ArrayList<String>();
        llista.add("R");
        llista.add("RE");
        llista.add("RJ");
        marcaTaula(jCheckBox3.isSelected(), llista);
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       int sel = jComboBox1.getSelectedIndex();
       boolean q = (sel==0);
       jTable1.setEnabled(q);
       jCheckBox1.setEnabled(q);
       jCheckBox2.setEnabled(q);
       jCheckBox3.setEnabled(q);
    }//GEN-LAST:event_jComboBox1ActionPerformed

     private void marcaTaula(boolean selected, ArrayList<String> llista) {

         for(int i=0; i<jTable1.getRowCount(); i++)
         {
             String codig = (String) jTable1.getValueAt(i, 3);
             if(llista.contains(codig)) {
                jTable1.setValueAt(selected, i, 1);
            }
         }
    }

      @Override
    protected JRootPane createRootPane() {
    JRootPane rootPane2 = new JRootPane();
    KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
    Action actionListener = new AbstractAction() {
      public void actionPerformed(ActionEvent actionEvent) {
        setVisible(false);
      }
    } ;
    InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    inputMap.put(stroke, "ESCAPE");
    rootPane2.getActionMap().put("ESCAPE", actionListener);

    return rootPane2;
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables



}
